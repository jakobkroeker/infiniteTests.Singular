
LIB("src/tests/test.primdecGTZ.only.primdec");

option("warn");
option("redSB");

echo = 0;



proc testPrimdecWrapper(rng)
{
      def genParams = defaultIdealGeneratorParams();
      // adjust random ideal generator params:
      genParams.maxGens = 2; 
      genParams.absMaxCoeff = 14;
      genParams.maxMonomialDegree = 5;
      genParams.maxTermsPerGen = 2;

      def idealG = idealGeneratorFromParams( genParams  );
 
  	int trials = 300000;

    //def rng = createRing(cchar,cord, numVars) ;

	testPrimdec( rng,idealG, trials );

}


monitor("log/test.primdecGTZ.only.primdec.out.04","io");
system("random");
option("redSB");

//echo = 0;
printlevel = 0 ;
TRACE=0;
int numVars = 3;

def rng = createRing("0","(dp(2),dp(1))", numVars) ;
testPrimdecWrapper(rng);


// ./singular-spielwiese < input/test.primdecGTZ.only.primdec.04 2>&1 | tee -a log/test.primdecGTZ.only.primdec.04.log ;
// ulimit -v 1000000 ; ulimit -t 500
// export cont=1; while [ $cont -eq 1 ] ; do ./singular-spielwiese < input/test.primdecGTZ.only.primdec.04 2>&1 | tee -a log/test.primdecGTZ.only.primdec.out.04.log ; if [ $? -eq 123 ] ; then export cont=0; fi; done

