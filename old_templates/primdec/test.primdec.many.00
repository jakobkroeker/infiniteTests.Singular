

LIB("src/tests/test.primdec.many");
// monitor("log/test.std.correct.00","io");



//////////////////////////////////////////////////////////////////////////////// 
//////// adjust verbosity
printlevel = 0 ;
TRACE = 0;
echo  = 0;

//////// adjust random ideal generator params: 
TIdealGeneratingParameters genParams = defaultRandomConstructionParams();

genParams.absMaxCoeff       = 150;
genParams.minVarFactorsPerMonomial = 0;
genParams.maxVarFactorsPerMonomial = 5;
genParams.maxTermsPerGen    = 3;
genParams.maxGens           = 3;

def genTable = createRandomGeneratorsByParams( genParams  );

//////// adjust ring  
string cchar    = "0";
string ordering = "dp";
int    numVars  = 3;

def rng = createRing( cchar, ordering, numVars ) ;

option("nowarn");
option("redSB");

//////// adjust num of trials  
int trials = 100000000;
//////////////////////////////////////////////////////////////////////////////// 
 

testPrimdec( rng, genTable.idealG, trials);

// ulimit -v 1000000 ; ulimit -t 500
// ./singular-spielwiese < input/test.primdec.many.00 2>&1 | tee -a log/test.primdec.many.00.log ;
// export cont=1; while [ $cont -eq 1 ] ; do nice -19 ./singular-spielwiese < input/test.primdec.many.00 2>&1 | tee -a log/test.primdec.many.00.log ; if [ $? -eq 123 ] ; then export cont=0; fi; done
