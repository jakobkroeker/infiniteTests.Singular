
LIB("src/tests/test.normal.lib");

option("warn");
option("redSB");

echo = 0;


proc testNormalWrapper(rng)
{
      def genParams = defaultIdealGeneratorParams();
      // adjust random ideal generator params:
      genParams.absMaxCoeff = 54;
      genParams.maxMonomialDegree = 2;
      genParams.maxTermsPerGen = 3;
      genParams.maxGens = 3;

      def idealG = idealGeneratorFromParams( genParams  );

      int trials = 3000000;
      testNormal( rng, idealG, trials );
}


option("nowarn");

TRACE = 0;
printlevel = 1;
echo = 0;



monitor("log/test.normal.lib.out.02","io");
system("random");
option("redSB");


printlevel = 1 ;
TRACE=0;
int numVars = 4;

def rng = createRing("0", "( dp(3),dp(1) )", numVars) ;
testNormalWrapper(rng);


// ulimit -v 500000 ; ulimit -t 500
// ./singular-spielwiese < input/test.normal.lib.02 2>&1 | tee -a log/test.normal.lib.02.log ;
// export cont=1; while [ $cont -eq 1 ] ; do ./singular-spielwiese < input/test.normal.lib.02 2>&1 | tee -a log/test.normal.lib.out.02.log ; if [ $? -eq 123 ] ; then export cont=0; fi; done

