
/*

string logfile = "/tmp/std03.log";

string cmd = read("input/std/test.std.segv.random.noblock.00"); execute(cmd);

run();

// solche parameter sind gut, die 
   bewirken, dass m√∂glichst viele pfade/ quelltext
   abgedeckt wird.

*/


LIB("src/tests/test.std.correct");
LIB("src/randomRing.lib");
LIB("src/testutils.lib");

//////////////////////////////////////////////////////////////////////////////// 
//////// adjust verbosity
printlevel = 0 ;
TRACE = 0;
echo  = 0;

def assumeLevel=3;

//////// adjust random ideal generator params: 
TIdealGeneratingParameters genParams = defaultRandomConstructionParams();

genParams.absMaxCoeff       = 30;
genParams.minVarFactorsPerMonomial = 0;
genParams.maxVarFactorsPerMonomial = 3;
genParams.maxTermsPerGen    = 3;
genParams.maxGens           = 3;
genParams.bFractionsOn      = 1;

def genTable = createRandomGeneratorsByParams( genParams  );

 def optionlist = list ("redSB", "redTail");
 
 ////////////////////////////////// random ring options   ////////////////////////////////
  
 // ordering settings
  TOrderingOpts oopts;  
  oopts.minWeight = -10; //rename to minWeight
  oopts.maxWeight = 5; //rename to maxWeight
  oopts.randomOrd = chooseStraightOrdering; //rename to ordStringP
  
  // minpoly settings
  TIdealGeneratingParameters minpolyGenParams = defaultRandomConstructionParams();

  minpolyGenParams.absMaxCoeff       = 300;
  minpolyGenParams.minVarFactorsPerMonomial = 0;
  minpolyGenParams.maxVarFactorsPerMonomial = 3;
  minpolyGenParams.maxTermsPerGen    = 4;
  minpolyGenParams.bFractionsOn      = 0;
 
  //////////////////////  composing ring options  //////////////// 
  TRandomRingOpts ropts = defaultRandomRingOpts();
  ropts.minChar = 0;
  ropts.maxChar = 200;
  ropts.doExt   = 0; //0:no; 1:yes; 2:randomly
  ropts.maxVars = 2;
  
  ropts.minpolyGenParams = minpolyGenParams;
  ropts.oopts   = oopts;     //rename to monomialOrderingOpts

  //ropts.ordString = randomGLWMixedOrdering; // rename to ordStringP or ordStringF
 
  ropts.ordString = randomGLWOrdering; // rename to ordStringP or ordStringF
 
  /////////////////////////////////////////////////////////////////////////////////////////

  TRandomRingGens rgens = createRandomRingGens(ropts);  

  // def R = rgens.getRing(); setring R;

option(warn);

int trialsPerRing = 10; // currently ignored


TGroebnerTestFlags flags = defaultGroebnerTestFlags();

  flags.reduceTest = 0;
  flags.repeatApplication = 1;
  flags.equalTest = 0;
  flags.optionflagTest = 0;
  
def ol = createDefaultOutputInterface(logfile);

proc run()
{      
      TProcInfo testeeInfo;   testeeInfo.name = "std";    
     
    option(warn);
    //  testGroebner( testeeinfo, rgens.getRing, gens, optionlist, trialsPerRing, ol );
    testGroebnerAppend( testeeInfo, rgens.getRing, genTable, optionlist, trialsPerRing, flags, infiniteTestsFinished, ol );
    
}



