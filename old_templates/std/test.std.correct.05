

LIB("src/tests/test.std.correct");
//monitor("log/test.std.correct.05","io");



//////////////////////////////////////////////////////////////////////////////// 
//////// adjust verbosity
printlevel = 0 ;
TRACE = 0;
echo  = 0;

//////// adjust random ideal generator params: 
def genParams = defaultRandomConstructionParams();

//genParams.absMaxCoeff       = 50;
genParams.absMaxCoeff       = 10;
genParams.bFractionsOn = 0;
genParams.minVarFactorsPerMonomial = 0;
genParams.maxVarFactorsPerMonomial = 3;
genParams.maxTermsPerGen    = 3;
genParams.maxGens           = 3;

def gens = createRandomGeneratorsByParams( genParams  );

//////// adjust ring  
string cchar    = "integer";
string ordering = "dp";
int    numVars  = 3;

//def rng = createRing( cchar, ordering, numVars ) ;
ring rng = integer,(x,y,z),(dp(2),dp(1));

option("nowarn");
option(redSB);
option(redTail);

//////// adjust num of trials  
int trials = 100000000;
//////////////////////////////////////////////////////////////////////////////// 
 

testGroebner( rng, gens.idealG, trials,logfile);

// ulimit -v 1000000 ; ulimit -t 500
//  set -o pipefail; ./singular-spielwiese < input/test.std.correct.05 2>&1 | tee -a log/test.std.correct.05.log ;
// export cont=1; while [ $cont -eq 1 ] ; do set -o pipefail; nice -19 ./singular-spielwiese < input/test.std.correct.05 2>&1 | tee -a log/test.std.correct.05.log ; if [ $? -eq 123 ] ; then export cont=0; fi; done
