/////////////////////
version="version test.crash";
category="";
info="
";


LIB "ringutils.lib";
LIB "wrappers.lib";

proc crashTest( loadingLibsAsEscapedStr, getRng , inputG, trialsPerRing, nameOfTestee, inputToString, ol  )
{
    ol.writeX( " // crashTest for " + nameOfTestee );
         
    int warnIsSet = optionIsSet("warn");
    option(nowarn);
    if (defined(basering) ) {   def BAS=basering; }
    def rng = getRng( );
    setring rng;
    option(warn);
      
    short = 0;

    int trial;
    
    string cmd;
    
    while(1)
    {   
        option(nowarn);  
        kill rng;      

        ol.writeX( " // getRng() ;");

        def rng = getRng( );
        setring rng;
        
        if (warnIsSet)      {        option(warn);      }
        
        ol.writeX( loadingLibsAsEscapedStr );     
        ol.writeX(  ringToStringHack (basering) );
        ol.writeX( "int trial = " + string( trial) + ";" );
        
        if ( defined(input) ) { kill input; }
        def input = inputG();        
       
        ol.writeX( "system(\"random\", " + string( system("random") ) + ");" );
        ol.writeX( typeof(input)+" input = " + inputToString( input ) + ";" );
      
        cmd = nameOfTestee+"(input);";      
        ol.writeX( cmd );
        
        execute(cmd);
    }


    if (defined(BAS)) {  setring BAS; }
    return(1);
}



